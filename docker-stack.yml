version: "3" ###

services:
  wpdbcluster:
    image: gregnuj/mariadb-galera-swarm
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ChangeME
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: ChangeME
      CLUSTER_MINIMUM: 3
      CLUSTER_NAME: wpdbcluster
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.

  wordpress:
    image: wordpress:php7.1-fpm-alpine
    networks:
      - backend
      - frontend
    ports:
      - 8080:80
    depends_on:
      - wpdbcluster
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      WORDPRESS_DB_HOST: "wpdbcluster"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_USER: "wordpress"
      WORDPRESS_DB_PASSWORD: "ChangeME"
      WORDPRESS_AUTH_KEY: "ChangeME"
      WORDPRESS_LOGGED_IN_KEY: "ChangeME"
      WORDPRESS_AUTH_SALT: "ChangeME"
      WORDPRESS_LOGGED_IN_SALT: "ChangeME"
    depends_on:
      - wpdbcluster

  php:
    image: php/7.1.7-fpm-alpine
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025

  nginx:
    image: nginx/1.13.3-alpine
    networks:
      - frontend
      - backend
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html
    depends_on:
      - php
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:wp.docker.localhost'

  varnish:
    image: cloudposse/varnish
    networks:
      - backend
    depends_on:
      - nginx
    environment:
      VARNISH_SECRET: secret
      VARNISH_BACKEND_HOST: nginx
      VARNISH_BACKEND_PORT: 80
    labels:
      - 'traefik.backend=varnish'
      - 'traefik.port=6081'
      - 'traefik.frontend.rule=Host:varnish.wp.docker.localhost'

  redis:
    image: redis:alpine
    networks:
      - backend

  pma:
    image: phpmyadmin/phpmyadmin
    networks:
      - backend
      - frontend
    environment:
      PMA_HOST: mariadb
      PMA_USER: wordpress
      PMA_PASSWORD: wordpress
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - 'traefik.backend=pma'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:pma.wp.docker.localhost'

  athenapdf:
    image: arachnysdocker/athenapdf-service
    networks:
      - backend
    environment:
      WEAVER_AUTH_KEY: weaver-auth-key
      WEAVER_ATHENA_CMD: "athenapdf -S"
      WEAVER_MAX_WORKERS: 10
      WEAVER_MAX_CONVERSION_QUEUE: 50
      WEAVER_WORKER_TIMEOUT: 90
      WEAVER_CONVERSION_FALLBACK: 'false'

  mailhog:
    image: mailhog/mailhog
    networks:
      - backend
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.wp.docker.localhost'

  portainer:
    image: portainer/portainer
    networks:
      - backend
    command: --no-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.wp.docker.localhost'

  traefik:
    image: traefik
    networks:
      - frontend
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '8000:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /traefik.toml:/etc/traefik/traefik.toml:ro
networks:
  frontend:
  backend:
  secure:
